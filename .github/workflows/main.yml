name: Surf Class Notifier

on:
  schedule:
    - cron: '0,30 7-22 * * *'  # Run every 30 minutes from 7 AM to 10 PM UTC
  workflow_dispatch:  # Manually trigger the workflow

jobs:
  surf_class_check:
    runs-on: ubuntu-latest  # Use a stable version of Ubuntu
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'  # Use Node.js 18 for better compatibility

      # Step 3: Install Chromium dependencies
      - name: Install Chromium dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 \
            libfontconfig1 libgcc1 libgdk-pixbuf2.0-0 libglib2.0-0 \
            libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 \
            libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 \
            libxss1 libxtst6 ca-certificates fonts-liberation lsb-release \
            xdg-utils wget libgbm-dev libxshmfence1

      # Step 4: Install Node.js dependencies
      - name: Install Node.js dependencies
        run: npm ci

      # Step 5: Run the bot
      - name: Running the bot
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
          WEB_EMAIL: ${{ secrets.WEB_EMAIL }}
          WEB_PASSWORD: ${{ secrets.WEB_PASSWORD }}
          PUBLIC_CHANNEL_TOKEN: ${{ secrets.PUBLIC_CHANNEL_TOKEN }}
          DROPBOX_CLIENT_ID: ${{ secrets.DROPBOX_CLIENT_ID }}
          DROPBOX_CLIENT_SECRET: ${{ secrets.DROPBOX_CLIENT_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          DROPBOX_ACCESS_TOKEN: ${{ secrets.DROPBOX_ACCESS_TOKEN }}
          WEATHERAPI_API_KEY: ${{ secrets.WEATHERAPI_API_KEY }}
          SURF_REGISTERING_WEBSITE_LINK: ${{ secrets.SURF_REGISTERING_WEBSITE_LINK }}
          SURF_FORECAST_LINK: ${{ secrets.SURF_FORECAST_LINK }}
          LOCATION_NAME: ${{ secrets.LOCATION_NAME }}
          SURF_REGISTERING_WEBSITE_MESSAGE_HEADER: ${{ secrets.SURF_REGISTERING_WEBSITE_MESSAGE_HEADER }}
        run: npm start
